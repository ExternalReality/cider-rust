/*
 * TeamCity REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AgentPool {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "maxAgents", skip_serializing_if = "Option::is_none")]
    pub max_agents: Option<i32>,
    #[serde(rename = "ownerProject", skip_serializing_if = "Option::is_none")]
    pub owner_project: Option<crate::models::Project>,
    #[serde(rename = "projects", skip_serializing_if = "Option::is_none")]
    pub projects: Option<crate::models::Projects>,
    #[serde(rename = "agents", skip_serializing_if = "Option::is_none")]
    pub agents: Option<crate::models::Agents>,
    #[serde(rename = "locator", skip_serializing_if = "Option::is_none")]
    pub locator: Option<String>,
}

impl AgentPool {
    pub fn new() -> AgentPool {
        AgentPool {
            id: None,
            name: None,
            href: None,
            max_agents: None,
            owner_project: None,
            projects: None,
            agents: None,
            locator: None,
        }
    }
}


