/*
 * TeamCity REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Change {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "internalVersion", skip_serializing_if = "Option::is_none")]
    pub internal_version: Option<String>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
    #[serde(rename = "registrationDate", skip_serializing_if = "Option::is_none")]
    pub registration_date: Option<String>,
    #[serde(rename = "personal", skip_serializing_if = "Option::is_none")]
    pub personal: Option<bool>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "webUrl", skip_serializing_if = "Option::is_none")]
    pub web_url: Option<String>,
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<crate::models::User>,
    #[serde(rename = "files", skip_serializing_if = "Option::is_none")]
    pub files: Option<crate::models::FileChanges>,
    #[serde(rename = "vcsRootInstance", skip_serializing_if = "Option::is_none")]
    pub vcs_root_instance: Option<crate::models::VcsRootInstance>,
    #[serde(rename = "parentChanges", skip_serializing_if = "Option::is_none")]
    pub parent_changes: Option<crate::models::Changes>,
    #[serde(rename = "parentRevisions", skip_serializing_if = "Option::is_none")]
    pub parent_revisions: Option<crate::models::Items>,
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<crate::models::Properties>,
    #[serde(rename = "storesProjectSettings", skip_serializing_if = "Option::is_none")]
    pub stores_project_settings: Option<bool>,
    #[serde(rename = "locator", skip_serializing_if = "Option::is_none")]
    pub locator: Option<String>,
}

impl Change {
    pub fn new() -> Change {
        Change {
            id: None,
            version: None,
            internal_version: None,
            username: None,
            date: None,
            registration_date: None,
            personal: None,
            href: None,
            web_url: None,
            comment: None,
            user: None,
            files: None,
            vcs_root_instance: None,
            parent_changes: None,
            parent_revisions: None,
            attributes: None,
            stores_project_settings: None,
            locator: None,
        }
    }
}


