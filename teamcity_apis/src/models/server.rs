/*
 * TeamCity REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Server {
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "versionMajor", skip_serializing_if = "Option::is_none")]
    pub version_major: Option<i32>,
    #[serde(rename = "versionMinor", skip_serializing_if = "Option::is_none")]
    pub version_minor: Option<i32>,
    #[serde(rename = "startTime", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<String>,
    #[serde(rename = "currentTime", skip_serializing_if = "Option::is_none")]
    pub current_time: Option<String>,
    #[serde(rename = "buildNumber", skip_serializing_if = "Option::is_none")]
    pub build_number: Option<String>,
    #[serde(rename = "buildDate", skip_serializing_if = "Option::is_none")]
    pub build_date: Option<String>,
    #[serde(rename = "internalId", skip_serializing_if = "Option::is_none")]
    pub internal_id: Option<String>,
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<String>,
    #[serde(rename = "webUrl", skip_serializing_if = "Option::is_none")]
    pub web_url: Option<String>,
    #[serde(rename = "projects", skip_serializing_if = "Option::is_none")]
    pub projects: Option<crate::models::Href>,
    #[serde(rename = "vcsRoots", skip_serializing_if = "Option::is_none")]
    pub vcs_roots: Option<crate::models::Href>,
    #[serde(rename = "builds", skip_serializing_if = "Option::is_none")]
    pub builds: Option<crate::models::Href>,
    #[serde(rename = "users", skip_serializing_if = "Option::is_none")]
    pub users: Option<crate::models::Href>,
    #[serde(rename = "userGroups", skip_serializing_if = "Option::is_none")]
    pub user_groups: Option<crate::models::Href>,
    #[serde(rename = "agents", skip_serializing_if = "Option::is_none")]
    pub agents: Option<crate::models::Href>,
    #[serde(rename = "buildQueue", skip_serializing_if = "Option::is_none")]
    pub build_queue: Option<crate::models::Href>,
    #[serde(rename = "agentPools", skip_serializing_if = "Option::is_none")]
    pub agent_pools: Option<crate::models::Href>,
    #[serde(rename = "investigations", skip_serializing_if = "Option::is_none")]
    pub investigations: Option<crate::models::Href>,
    #[serde(rename = "mutes", skip_serializing_if = "Option::is_none")]
    pub mutes: Option<crate::models::Href>,
}

impl Server {
    pub fn new() -> Server {
        Server {
            version: None,
            version_major: None,
            version_minor: None,
            start_time: None,
            current_time: None,
            build_number: None,
            build_date: None,
            internal_id: None,
            role: None,
            web_url: None,
            projects: None,
            vcs_roots: None,
            builds: None,
            users: None,
            user_groups: None,
            agents: None,
            build_queue: None,
            agent_pools: None,
            investigations: None,
            mutes: None,
        }
    }
}


