/*
 * TeamCity REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Group {
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "parent-groups", skip_serializing_if = "Option::is_none")]
    pub parent_groups: Option<crate::models::Groups>,
    #[serde(rename = "child-groups", skip_serializing_if = "Option::is_none")]
    pub child_groups: Option<crate::models::Groups>,
    #[serde(rename = "users", skip_serializing_if = "Option::is_none")]
    pub users: Option<crate::models::Users>,
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<crate::models::Roles>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<crate::models::Properties>,
}

impl Group {
    pub fn new() -> Group {
        Group {
            key: None,
            name: None,
            href: None,
            description: None,
            parent_groups: None,
            child_groups: None,
            users: None,
            roles: None,
            properties: None,
        }
    }
}


