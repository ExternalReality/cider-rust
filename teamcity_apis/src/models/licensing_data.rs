/*
 * TeamCity REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LicensingData {
    #[serde(rename = "licenseUseExceeded", skip_serializing_if = "Option::is_none")]
    pub license_use_exceeded: Option<bool>,
    #[serde(rename = "maxAgents", skip_serializing_if = "Option::is_none")]
    pub max_agents: Option<i32>,
    #[serde(rename = "unlimitedAgents", skip_serializing_if = "Option::is_none")]
    pub unlimited_agents: Option<bool>,
    #[serde(rename = "agentsLeft", skip_serializing_if = "Option::is_none")]
    pub agents_left: Option<i32>,
    #[serde(rename = "maxBuildTypes", skip_serializing_if = "Option::is_none")]
    pub max_build_types: Option<i32>,
    #[serde(rename = "unlimitedBuildTypes", skip_serializing_if = "Option::is_none")]
    pub unlimited_build_types: Option<bool>,
    #[serde(rename = "buildTypesLeft", skip_serializing_if = "Option::is_none")]
    pub build_types_left: Option<i32>,
    #[serde(rename = "serverLicenseType", skip_serializing_if = "Option::is_none")]
    pub server_license_type: Option<String>,
    #[serde(rename = "serverEffectiveReleaseDate", skip_serializing_if = "Option::is_none")]
    pub server_effective_release_date: Option<String>,
    #[serde(rename = "licenseKeys", skip_serializing_if = "Option::is_none")]
    pub license_keys: Option<crate::models::LicenseKeys>,
}

impl LicensingData {
    pub fn new() -> LicensingData {
        LicensingData {
            license_use_exceeded: None,
            max_agents: None,
            unlimited_agents: None,
            agents_left: None,
            max_build_types: None,
            unlimited_build_types: None,
            build_types_left: None,
            server_license_type: None,
            server_effective_release_date: None,
            license_keys: None,
        }
    }
}


