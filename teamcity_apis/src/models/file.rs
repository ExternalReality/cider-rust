/*
 * TeamCity REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct File {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "fullName", skip_serializing_if = "Option::is_none")]
    pub full_name: Option<String>,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
    #[serde(rename = "modificationTime", skip_serializing_if = "Option::is_none")]
    pub modification_time: Option<String>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<std::path::PathBuf>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<crate::models::Href>,
    #[serde(rename = "children", skip_serializing_if = "Option::is_none")]
    pub children: Option<crate::models::Files>,
}

impl File {
    pub fn new() -> File {
        File {
            name: None,
            full_name: None,
            size: None,
            modification_time: None,
            href: None,
            parent: None,
            content: None,
            children: None,
        }
    }
}


