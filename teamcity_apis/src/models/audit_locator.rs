/*
 * TeamCity REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuditLocator {
    #[serde(rename = "action", skip_serializing_if = "Option::is_none")]
    pub action: Option<String>,
    #[serde(rename = "affectedProject", skip_serializing_if = "Option::is_none")]
    pub affected_project: Option<String>,
    #[serde(rename = "buildType", skip_serializing_if = "Option::is_none")]
    pub build_type: Option<String>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "item", skip_serializing_if = "Option::is_none")]
    pub item: Option<String>,
    #[serde(rename = "lookupLimit", skip_serializing_if = "Option::is_none")]
    pub lookup_limit: Option<i32>,
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<i32>,
    #[serde(rename = "systemAction", skip_serializing_if = "Option::is_none")]
    pub system_action: Option<bool>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<String>,
}

impl AuditLocator {
    pub fn new() -> AuditLocator {
        AuditLocator {
            action: None,
            affected_project: None,
            build_type: None,
            count: None,
            id: None,
            item: None,
            lookup_limit: None,
            start: None,
            system_action: None,
            user: None,
        }
    }
}


