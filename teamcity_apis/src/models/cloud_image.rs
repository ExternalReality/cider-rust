/*
 * TeamCity REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CloudImage {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "profile", skip_serializing_if = "Option::is_none")]
    pub profile: Option<crate::models::CloudProfile>,
    #[serde(rename = "instances", skip_serializing_if = "Option::is_none")]
    pub instances: Option<crate::models::CloudInstances>,
    #[serde(rename = "errorMessage", skip_serializing_if = "Option::is_none")]
    pub error_message: Option<String>,
    #[serde(rename = "agentTypeId", skip_serializing_if = "Option::is_none")]
    pub agent_type_id: Option<i32>,
    #[serde(rename = "locator", skip_serializing_if = "Option::is_none")]
    pub locator: Option<String>,
}

impl CloudImage {
    pub fn new() -> CloudImage {
        CloudImage {
            id: None,
            name: None,
            href: None,
            profile: None,
            instances: None,
            error_message: None,
            agent_type_id: None,
            locator: None,
        }
    }
}


